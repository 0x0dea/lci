                    lci - a LOLCODE interpreter written in C

LICENSE

    Copyright (C) 2010 Justin J. Meza

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

ABOUT

lci is a LOLCODE interpreter written in C and is designed to be correct,
portable, fast, and precisely documented.

    * correct: Every effort has been made to test lci's conformance to the
          LOLCODE language specification. Unit tests come packaged with the lci
          source code.
    * portable: lci follows the widely ported ANSI C specification allowing it
          to compile on a broad range of systems.
    * fast: Much effort has gone into producing simple and efficient code
          whenever possible to the extent that the above points are not
          compromized.
    * precisely documented: lci uses Doxygen to generate literate code
          documentation, browsable here.

This project's homepage is at http://icanhaslolcode.org.  For help, visit
http://groups.google.com/group/lci-general.  To report a bug, go to
http://github.com/justinmeza/lci/issues.

Created and maintained by Justin J. Meza <justin.meza@gmail.com>.

INSTALLATION

To install lci, you should be able to

    $ make && make check

and, assuming no errors are encountered (if there are, please let us know at
http://groups.google.com/group/lci-general) go ahead and run (with administrator
privileges)

    # make install

Optionally, you may want to make documentation for lci.  This requires the
doxygen program.  To do so, do

    $ make docs
